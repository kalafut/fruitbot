function new_game() {
}

function make_move() {
   var board = get_board();

   // we found an item! take it!
   if (board[get_my_x()][get_my_y()] > 0) {
       return TAKE;
   }

   var rand = Math.random() * 4;

   if (rand < 1) return NORTH;
   if (rand < 2) return SOUTH;
   if (rand < 3) return EAST;
   if (rand < 4) return WEST;

   return PASS;
}

// Optionally include this function if you'd like to always reset to a 
// certain board number/layout. This is useful for repeatedly testing your
// bot(s) against known positions.
//
//function default_board_number() {
//    return 123;
//}

function default_board_setup() {
    var setup = {
        width: 9,
        height: 9,
                //  Apple, Banana, Cherry, Melon, Orange
        myFruit:    [ 1,     0,      0,      0,     1 ],
        oppFruit:   [ 2,     0,      0,      1,     0 ],
        board: [
            "+-----------------------------------------------------------+",
            "| A | B |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   | C |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   | M |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   | O |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   | O |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   | % |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   | @ |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|",
            "|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |",
            "+-----------------------------------------------------------+" ]
    };

    return setup;
}

